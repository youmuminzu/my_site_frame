<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="module.admin.dao.AdminUserDao">
    <resultMap id="adminUser" type="module.admin.entity.AdminUser" >
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="roleId" column="role_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="getAdminUser" parameterType="Map" resultMap="adminUser">
        select * from `admin_user`
        <where>
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="name!=null">
                AND `name` = #{name}
            </if>
            <if test="password!=null">
                AND password = #{password}
            </if>
            <if test="role_id!=null">
                AND role_id = #{role_id}
            </if>
            <if test="status!=null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <resultMap id="adminRole" type="module.admin.entity.AdminRole">
        <id property="id" column="role_id"/>
        <result property="role" column="role"/>
        <result property="description" column="description"/>
    </resultMap>
    <select id="getAdminUserRole" parameterType="int" resultMap="adminRole">
        SELECT u.role_id, r.* FROM `admin_user` u LEFT JOIN `admin_role` r ON r.id = u.role_id WHERE u.id = #{userId}
    </select>

    <resultMap id="adminPermission" type="module.admin.entity.AdminPermission">
        <id property="id" column="permission_id"/>
        <result property="permissionName" column="permission_name"/>
        <result column="description" property="description"/>
        <result column="available_resources" property="availableResources"/>
    </resultMap>
    <select id="getAdminUserPermissions" resultMap="adminPermission">
        SELECT r_p.permission_id,u.id as user_id,p.* FROM admin_role_permission r_p
        LEFT JOIN admin_permission p on r_p.permission_id = p.id
        LEFT JOIN admin_role r on r_p.role_id = r.id
        LEFT JOIN admin_user u on r.id = u.role_id
        WHERE u.id = #{userId}
    </select>

    <update id="updateAdminUser" parameterType="module.admin.entity.AdminUser">
        UPDATE admin_user SET
        name = #{name},
        password = #{password},
        status = #{status},
        role_id = #{roleId},
        update_time = #{updateTime}
        WHERE id = #{id}
    </update>


</mapper>
